@import './utils/_breakpoints.scss';
@import './utils/_colors.scss';
@import './utils/_media.scss';
@import './utils/_mixins.scss';
@import './utils/_sizes.scss';

* {
  margin: 0;
  padding: 0;
}

body {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-content: center;
  align-items: center;
  font-size: 2rem;
  height: 100vh;
}

#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
}

.text {
  order: 2;
  padding-top: 40px;
  width: 440px;
  font-weight: bold;
}

.board {
  order: 1;
  width: 440px;
  height: 440px;
  padding: 5px;
  background-color: #001427;
  border-radius: 7px;
  outline: none;
  position: relative;
}

.cell,
.tile {
  width: 100px;
  height: 100px;
  margin: 5px;
  line-height: 95px;
  display: inline-block;
  font-size: 55px;
  font-weight: bold;
  text-align: center;
  vertical-align: middle;
  border-radius: 7px;
  color: #f9f6f2;
  background-color: #002b44;
}

.board .cell,
.tile {
  user-select: none;
  cursor: default;
}

.tilej {
  background-color: #8c2155;
  text-indent: -9999px;

  &::after {
    @include center();

    content: '';
    width: 32px;
    height: 32px;
    background: url('../assets/images/gift.svg');
    background-size: 32px 32px;
  }
}

.tilex {
  background-color: #b9b9bb;
}

.tile0 {
  background-color: #002b44;
}

.tile2 {
  background-color: #86cb92;
}

.tile4 {
  background-color: #70b28b;
}

.tile8 {
  background-color: #609977;
}

.tile16 {
  background-color: #40664f;
}

.tile32 {
  background-color: #edcf72;
}

.tile64 {
  background-color: #edc44b;
}

.tile128 {
  background-color: #eac317;
  font-size: 45px;
}

.tile256 {
  background-color: #ddb500;
  font-size: 45px;
}

.tile512 {
  background-color: #ff7759;
  font-size: 45px;
}

.tile1024 {
  background-color: #f65e3b;
  font-size: 35px;
}

.tile2048 {
  background-color: #252424;
  font-size: 35px;
}

.tile {
  position: absolute;
}

.tile.merged {
  display: none;
}

.tile.merged.isMoving {
  display: inline;
}

.tile.new,
.overlay {
  animation-duration: 0.2s;
  animation-name: newTile;
  animation-fill-mode: forwards;
  animation-delay: 0.15s;
  transform: scale(0);
}

@keyframes newTile {
  from {
    transform: scale(0);
  }

  to {
    transform: scale(1);
  }
}

.overlay {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  background-color: rgba(0, 20, 39, 0.75);
  border-radius: 7px;
}

.overlay .message {
  font-size: 55px;
  font-weight: bolder;
  color: #f9f6f2;
}

.overlay .button {
  background-color: #876;
  color: #fff;
  height: 40px;
  width: 200px;
  font-size: 20px;
  font-weight: bold;
  cursor: pointer;
  border: none;
  border-radius: 5px;
}

@for $row from 0 through 3 {
  @for $column from 0 through 3 {
    .position_#{$row}_#{$column}:not(.isMoving) {
      top: 110px * $row + 5px;
      left: 110px * $column + 5px;
    }
  }
}
/* stylelint-disable */
@for $fromRow from 0 through 3 {
  @for $toRow from 0 through 3 {
    $name: row_from_#{$fromRow}_to_#{$toRow};

    @if $fromRow == $toRow {
      .#{$name} {
        top: 110px * $toRow + 5px;
      }
    } @else {
      .#{$name} {
        animation-duration: 0.2s;
        animation-name: $name;
        animation-fill-mode: forwards;
      }

      @keyframes #{$name} {
        from {
          top: 110px * $fromRow + 5px;
        }

        to {
          top: 110px * $toRow + 5px;
        }
      }
    }
  }
}

@for $fromColumn from 0 through 3 {
  @for $toColumn from 0 through 3 {
    $name: column_from_#{$fromColumn}_to_#{$toColumn};

    @if $fromColumn == $toColumn {
      .#{$name} {
        left: 110px * $toColumn + 5px;
      }
    } @else {
      .#{$name} {
        animation-duration: 0.2s;
        animation-name: $name;
        animation-fill-mode: forwards;
      }

      @keyframes #{$name} {
        from {
          left: 110px * $fromColumn + 5px;
        }

        to {
          left: 110px * $toColumn + 5px;
        }
      }
    }
  }
}
/* stylelint-enable */
